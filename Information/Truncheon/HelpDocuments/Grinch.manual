============================================
|  NION HELP AND DOCUMENTATION SYSTEM 3.0  |
|==========================================|
| Updated: 30-July-2021 0342 +0530         |
| Time to Read : 30 Minutes                |
============================================

PAGE 1

==============
 Introduction
==============

Grinch File Manager is a built in tool which will
help users to manage their files. The file manager
will support scripting which will help in automating
file management easily. Grinch File Manager has 
commands which are compatible on most systems.

<end of page>

PAGE 2

==============
   COMMANDS   
==============

Here are a list of commands available in the Grinch File Manager.

----------      ----------------------------------------------------------------
 COMMANDS        DESCRIPTION
----------      ----------------------------------------------------------------
 cd              Changes the directory to the specified directory
 clear           Clears the output screen
 copy/cp         Copies the files/directories to the target directory
 download        Downloads the file from the specified URL
 exit            Exits the Truncheon Shell
 ?/help          Displays this help file
 ls              lists the files and directories present in the specified path
 mkdir           Create a directory in the current directory
 move/mv         Moves the files/directories to the target directory
 read            Read a specified file in the given directory
 rename          Renames the specified file or directory to a new desired name
 rm              Removes the specified file or directory
 tree            Provides a tree view of the directory
 write           Edit or create a new file, and write content into it
----------      ----------------------------------------------------------------

The following will describe each command, syntax and an example usage to help the 
users to work with Grinch File Manager easily.

<end of page>

PAGE 3

-----------------------------
COMMAND : cd
SYNTAX  : cd <directory_name>
        : cd ..
EXAMPLE : 

user@./Users/Truncheon/user/>: cd Scripts
user@./Users/Truncheon/user/Scripts/>: _
 OR
user@./Users/Truncheon/user/Scripts/>: cd .. 
user@./Users/Truncheon/user/>: _

-----------------------------

NOTES: 

* When the user is at the root of user's directory,
ie "./Users/Truncheon/<username>/", they cannot 
traverse to the directories above that level. This
restriction has been implemented for the safety
of userdata and accidental data loss.

Ex.

user@./Users/Truncheon/user/>: cd ..
[ WARNING ] : Permission Denied.
 
* When trying to cd to a non-existent directory, an
error shall be displayed.

Ex.

user@./Users/Truncheon/user/>: cd aaa
[ ERROR ] : The specified file/directory does not exist.

-----------------------------
<end of page>

PAGE 4

-----------------------------
COMMAND : clear
SYNTAX  : clear
EXAMPLE :

user@./Users/Truncheon/user/>: clear
<clears the screen>

-----------------------------
<end of page>

PAGE 5

-----------------------------
COMMAND : copy/cp
SYNTAX  : copy <directory_name><new_directory_name>
        : cp <directory_name><new_directory_name>
        : copy <filename> <new_filename>
        : cp <filename> <new_filename>

EXAMPLE :

user@./Users/Truncheon/user/>: copy Hello.txt TestFolder
user@./Users/Truncheon/user/>: _

user@./Users/Truncheon/user/>: copy script1.fmx Scripts
user@./Users/Truncheon/user/>: _

-----------------------------
<end of page>

PAGE 6

-----------------------------
COMMAND : clear
SYNTAX  : clear
EXAMPLE : 

user@./Users/Truncheon/user/>: clear
<screen cleared>

-----------------------------
<end of page>

PAGE 7

-----------------------------
COMMAND : download
SYNTAX  : download <URL> <filename>
EXAMPLE :

user@./Users/Truncheon/user/>: download https://media.giphy.com/media/Ju7l5y9osyymQ/giphy.gif ClickMe.gif

-----------------------------
<end of page>

PAGE 8

-----------------------------
COMMAND : exit
SYNTAX  : exit
EXAMPLE :

user@./Users/Truncheon/user/>: exit
user@SYSTEM*> _

-----------------------------
<end of page>

PAGE 9

-----------------------------
COMMAND : ?/help
SYNTAX  : help
        : ?
EXAMPLE :

user@./Users/Truncheon/user/>: help
 OR
user@./Users/Truncheon/user/>: ?

<displays this help file>

-----------------------------
<end of page>

PAGE 10

-----------------------------
COMMAND : ls
SYNTAX  : ls
EXAMPLE :

user@./Users/Truncheon/user/>: ls
<lists the contents of the directories>

-----------------------------
<end of page>

PAGE 11

-----------------------------
COMMAND : mkdir
SYNTAX  : mkdir <directory_name>
EXAMPLE :

user@./Users/Truncheon/user/>: mkdir Hello
<Creates the directory "Hello">

-----------------------------
<end of page>

PAGE 12

-----------------------------
COMMAND : move/mv
SYNTAX  : move <directory_name><new_directory_name>
        : mv <directory_name><new_directory_name>
EXAMPLE :

user@./Users/Truncheon/user/>: move abc def
 OR
user@./Users/Truncheon/user/>: mv abc def
<moves file/folder abc to def> 

-----------------------------
<end of page>

PAGE 13

-----------------------------
COMMAND : read
SYNTAX  : read <filename>
EXAMPLE :

user@./Users/Truncheon/user/>: read abc
<reads the file named abc>

-----------------------------
<end of page>

PAGE 14

-----------------------------
COMMAND : rename
SYNTAX  : rename <directory_name> <new_directory_name>
        : rename <filename> <new_filename>
EXAMPLE :

user@./Users/Truncheon/user/>: rename abc def
<renames the directory/file called abc to def>

-----------------------------
<end of page>

PAGE 15

-----------------------------
COMMAND : rm
SYNTAX  : rm <directory/file name>
EXAMPLE :

user@./Users/Truncheon/user/>: rm abc
<removes the directory/file called abc>

-----------------------------
<end of page>

PAGE 16

-----------------------------
COMMAND : tree
SYNTAX  : tree
EXAMPLE :

user@./Users/Truncheon/user/>: tree

--- [ TREE VIEW ] ---

|user [ USER ROOT DIRECTORY ]
|--Scripts

-----------------------------
<end of page>

PAGE 17

-----------------------------
COMMAND : write
SYNTAX  : write <filename>
EXAMPLE :

user@./Users/Truncheon/user/>: write abc.txt
<opens the Wraith File Editor>

-----------------------------
<end of page>


PAGE 

-----------------------------
COMMAND : 
SYNTAX  : 
EXAMPLE :

user@./Users/Truncheon/user/>: 

-----------------------------
<end of page>

PAGE 18A

Scripting in Grinch

- Grinch File manager has a script engine which can be used to automate
file operations.

- The script will always end with an `End Script` line, denoting the end of
the script file. Any statement that shall begin with # will be treated as
a comment.

Continued in the next page...

<end of page>

PAGE 18B

The following block will demonstrate an example of a Nion script file.

---------------------------------------------------------------------------
Script File Extension : .fmx
Script Engine         : GHOST Script Engine
Availability          : Administrator Policy configuration dependent
---------------------------------------------------------------------------

 # it is a good idea to clear the screen before executing a script file
 clear

 # print hello world onto the screen
 echo "Hello World!"

 # demonstrate the confirm functionality
 echo "Creating a new directory..."
 mkdir abc

 # demonstrate the wait functionality
 ls

 #show the tree view of the directory
 tree

 # create a folder def
 mkdir def

 # copy abc to def
 cp abc def

 # change directory to def
 cd def

 # display the contents of def
 ls

 # create a folder ghi in def
 mkdir ghi

 # move ghi to abc
 mv ghi abc
 
 # display the contents of def
 ls

 # return back to root folder
 cd ..

 # remove the folder def
 rm def

 # it is a good idea to denote its the end of file to the interpreter
 # Any statements after the `End Script` line will not be executed
 End Script

 # demonstrate that this line will not be executed by interpreter
 echo "This line is not printed onto the screen."

---------------------------------------------------------------------------

<end of page>

<end of help>